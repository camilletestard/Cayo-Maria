summary(bmC3)
bmC3 <- lmer(Emo_bias ~ Photo_set + Face + Age + Sex*CSI.to.top3 + (1|ID), data = data)
summary(bmC3)
bmC3 <- lmer(Emo_bias ~ Photo_set + Face + Age + Sex*CSI.to.Top3 + (1|ID), data = data)
summary(bmC3)
View(data)
View(data)
bmSAP <- glmer(Look ~ Trial + Sex + Age + percent.rank +n.social.partners + (1|ID), data = data, family = binomial)
summary(bmSAP)
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_SEA_noNAN.csv")
names(data)[1]<-"ID"
# load required libraries
library(lme4)
library(afex)
bmSAP <- glmer(Look ~ Trial + Sex + Age + percent.rank +n.social.partners + (1|ID), data = data, family = binomial)
summary(bmSAP)
bmSAC <- glmer(Look ~ Trial + Sex + Age + percent.rank + CompositeSocialityIndex + (1|ID), data = data, family = binomial)
summary(bmSAC)
bmSAT <- glmer(Look ~ Trial + Sex + Age + percent.rank + CSI.to.Top3 + (1|ID), data = data, family = binomial)
summary(bmSAT)
bmSAC <- glmer(Look ~ Trial + Sex + Age + percent.rank + CompositeSocialityIndex + (1|ID), data = data, family = binomial)
summary(bmSAC)
bmSAW <- glmer(Look ~ Trial + Sex + Age + percent.rank + n.weak.connections + (1|ID), data = data, family = binomial)
summary(bmSAW)
bmSAT <- glmer(Look ~ Trial + Sex + Age + percent.rank + CSI.to.Top3 + (1|ID), data = data, family = binomial)
summary(bmSAT)
bm <- lmer(log(z.G.S) ~ Sex + Age + percent.rank, data = data)
summary(bm)
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_SEA_noNAN.csv")
names(data)[1]<-"ID"
# load required libraries
library(lme4)
library(afex)
bm <- lmer(log(z.G.S) ~ Sex + Age + percent.rank, data = data)
summary(bm)
bm <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank, data = data)
summary(bm)
bmL <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Look + (1|Trial), data = data)
summary(bmL)
bmL <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Look, data = data)
summary(bmL)
View(data)
bmTL <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Total_Looking, data = data)
summary(bmTL)
bmTL <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Total_looking, data = data)
summary(bmTL)
bmLA <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Latency, data = data)
summary(bmLA)
bmNL <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Num_looks, data = data)
summary(bmNL)
bmTL <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Total_looking, data = data)
summary(bmTL)
bmLA <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Latency, data = data)
summary(bmLA)
View(data)
bmSARG <- glmer(Latency ~ Trial + Sex + Age + percent.rank + z.G.S + (1|ID), data = data, family = Gamma)# Note, if use bobyqa optimizer, we get the same paramater values
summary(bmSARG)
bmSARG <- glmer(log(Latency) ~ Trial + Sex + Age + percent.rank + z.G.S + (1|ID), data = data, family = Gamma)# Note, if use bobyqa optimizer, we get the same paramater values
summary(bmSARG)
bmSARG <- glmer(Latency ~ Trial + Sex + Age + percent.rank + z.G.S + (1|ID), data = data)# Note, if use bobyqa optimizer, we get the same paramater values
summary(bmSARG)
bmSAP <- glmer(Latency ~ Trial + Sex + Age + percent.rank +n.social.partners + (1|ID), data = data)
summary(bmSAP)
bmSAC <- glmer(Latency ~ Trial + Sex + Age + percent.rank + CompositeSocialityIndex + (1|ID), data = data)
summary(bmSAC)
bmSAT <- glmer(Latency ~ Trial + Sex + Age + percent.rank + CSI.to.Top3 + (1|ID), data = data)
summary(bmSAT)
bmSAW <- glmer(Latency ~ Trial + Sex + Age + percent.rank + n.weak.connections + (1|ID), data = data)
summary(bmSAW)
bmSARG <- glmer(Latency ~ Trial + Sex + Age + percent.rank + z.G.S + (1|ID), data = data, family = gaussian)# Note, if use bobyqa optimizer, we get the same paramater values
summary(bmSARG)
bmSARG <- lmer(Latency ~ Trial + Sex + Age + percent.rank + z.G.S + (1|ID), data = data)
summary(bmSARG)
bmSAP <- lmer(Latency ~ Trial + Sex + Age + percent.rank +n.social.partners + (1|ID), data = data)
summary(bmSAP)
bmSAC <- lmer(Latency ~ Trial + Sex + Age + percent.rank + CompositeSocialityIndex + (1|ID), data = data)
summary(bmSAC)
bmSAT <- lmer(Latency ~ Trial + Sex + Age + percent.rank + CSI.to.Top3 + (1|ID), data = data)
summary(bmSAT)
bmSAW <- lmer(Latency ~ Trial + Sex + Age + percent.rank + n.weak.connections + (1|ID), data = data)
summary(bmSAW)
bmTL <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Total_looking, data = data)
summary(bmTL)
bmNL <- lm(log(z.G.S) ~ 1 + Sex + Age + percent.rank + Num_looks, data = data)
summary(bmNL)
# Load all trials data:
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_SEA_noNAN.csv")
names(data)[1]<-"ID"
# load required libraries
library(lme4)
library(afex)
#Effect of individual factors
bmSA <- glmer(Look ~ Trial + Sex + Age +  (1|ID), data = data, family = binomial)
summary(bmSA)
# Load all trials data:
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN.csv")
names(data)[1]<-"ID"
str(data)
#data$ord.rank <-factor(data$ord.rank)
bmSAR <- glmer(Look ~ Trial + Sex + Age + percent.rank +(1|ID), data = data, family = binomial)
summary(bmSAR)
# Run cochran's Q test of independence for proportions, for individuals who completed 3 trials only
library(MASS)
library(RVAideMemoire)
data$ord.rank <- factor(data$ord.rank)
cochran.qtest(Look ~ ord.rank|ID, data=data, alpha = 0.05, p.method = "fdr")
data$ord.rank <- factor(data$ord.rank)
cochran.qtest(Look ~ ord.rank, data=data, alpha = 0.05, p.method = "fdr")
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial_cohort.csv")
names(data)[1]<-"ID"
data$ord.rank <- factor(data$ord.rank)
cochran.qtest(Look ~ ord.rank|ID, data=data, alpha = 0.05, p.method = "fdr")
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_cohort.csv") # include
names(data)[1]<-"ID"
View(data)
View(data)
View(data)
data$ord.rank <- factor(data$ord.rank)
cochran.qtest(Look ~ Look|ord.rank, data=data, alpha = 0.05, p.method = "fdr")
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN.csv")
names(data)[1]<-"ID"
str(data)
bmR <- glmer(Look ~ Trial + percent.rank + (1|ID), data = data, family = binomial)
bmR <- glmer(Look ~ Trial + percent.rank + (1|ID), data = data, family = binomial, control = glmerControl(optimizer = c("bobyqa")))
summary(bmR)
bmSAR <- glmer(Look ~ Trial + Sex + Age + percent.rank +(1|ID), data = data, family = binomial)
summary(bmSAR)
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_1trial_cohort.csv")
tbl = table(data$Look, data$ord.rank)
chisq.test(tbl)
rm(list = ls())# clear all variables
#data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN.csv")
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial_cohort.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
str(data)
bmR <- glmer(Look ~ Trial*percent.rank + (1|ID), data = data, family = binomial, control = glmerControl(optimizer = c("bobyqa")))
summary(bmR)
bmR <- glmer(Look ~ Trial + percent.rank + (1|ID), data = data, family = binomial)
summary(bmR)
bmSAR <- glmer(Look ~ Trial + Sex + Age + percent.rank +(1|ID), data = data, family = binomial)
summary(bmSAR)
bmR <- glmer(Look ~ Trial * percent.rank + (1|ID), data = data, family = binomial)
summary(bmR)
bmR <- glmer(Look ~ Trial * ord.rank + (1|ID), data = data, family = binomial)
summary(bmR)
# Load data:
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_1trial_cohort.csv") # completed at least 3 trials
names(data)[1]<-"ID"
tbl = table(data$Look, data$ord.rank)
chisq.test(tbl)
rm(list = ls())# clear all variables
#data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN.csv")
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial_cohort.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
str(data)
# Load all trials data:
rm(list = ls())# clear all variables
#data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN.csv")
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial_cohort.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
str(data)
bmR <- glmer(Look ~ Trial * ord.rank + (1|ID), data = data, family = binomial)
summary(bmR)
bmR <- glmer(Look ~ Trial*percent.rank + (1|ID), data = data, family = binomial, control = glmerControl(optimizer = c("bobyqa")))
summary(bmR)
View(data)
View(data)
bmR <- lmer(Look ~ Trial * ord.rank  = data, family = binomial)
bmR <- lmer(Look ~ Trial * ord.rank , data = data, family = binomial)
bmR <- glmer(Look ~ Trial * ord.rank , data = data, family = binomial)
bmR <- glm(Look ~ Trial * ord.rank , data = data, family = binomial)
summary(bmR)
bmR <- glm(Look ~ Trial * percent.rank , data = data, family = binomial)
summary(bmR)
rm(list = ls())# clear all variables
#data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN.csv")
bmR <- glm(Look ~ Trial * percent.rank , data = data, family = binomial)
summary(bmR)
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial_cohort.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
str(data)
#data$ord
bmR <- glm(Look ~ Trial * percent.rank , data = data, family = binomial)
summary(bmR)
bmR <- glm(Look ~ Trial * ord.rank , data = data, family = binomial)
summary(bmR)
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial_cohort.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
bmR <- glm(Look ~ Trial * ord.rank , data = data, family = binomial)
summary(bmR)
bmASR <- glm(Look ~ Sex+ Age + Trial * ord.rank , data = data, family = binomial)
summary(bmASR)
bmASR <- glm(Look ~ Sex+ Age + Trial * percent.rank , data = data, family = binomial)
summary(bmASR)
bmASR <- glm(Look ~ Trial+ Age + Sex * ord.rank , data = data, family = binomial)
summary(bmASR)
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_4trial_cohort.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
bmR <- glm(Look ~ Trial * ord.rank , data = data, family = binomial)
summary(bmR)
#Looking at the effect of rank on individuals who completed the same number of trials
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_4trial.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
bmR <- glm(Look ~ Trial * ord.rank , data = data, family = binomial)
summary(bmR)
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
bmASR <- glm(Look ~ Sex+ Age + Trial * ord.rank , data = data, family = binomial)
summary(bmASR)
bmASR <- glm(Look ~ Sex+ Age + Trial * percent.rank , data = data, family = binomial)
summary(bmASR)
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_4trial.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
bmASR <- glm(Look ~ Sex+ Age + Trial * percent.rank , data = data, family = binomial)
summary(bmASR)
# Load all trials data:
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN.csv")
names(data)[1]<-"ID"
str(data)
bmSAR <- glmer(Look ~ Trial + Sex + Age + percent.rank +(1|ID), data = data, family = binomial)
summary(bmSAR)
bmSAR <- glmer(Look ~ Sex + Age + Trial*percent.rank +(1|ID), data = data, family = binomial)
summary(bmSAR)
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_4trial.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
bmASR <- glm(Look ~ Sex+ Age + Trial * ord.rank , data = data, family = binomial)
summary(bmASR)
bmR <- glm(Look ~ Trial * ord.rank , data = data, family = binomial)
summary(bmR)
bmASR <- lm(Latency ~ Sex+ Age + Trial * percent.rank , data = data)
summary(bmASR)
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN.csv")
names(data)[1]<-"ID"
str(data)
bmASR <- lmer(Latency ~ Sex+ Age + Trial * percent.rank + (1|ID), data = data)
summary(bmASR)
#Looking at the effect of rank on individuals who completed the same number of trials
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
bmR <- glm(Look ~ Trial * ord.rank , data = data, family = binomial)
summary(bmR)
bmSAG <- glmer(Look ~ Sex + Age + Trial*z.G.S + (1|ID), data = data, family = binomial)
summary(bmSAG)
bmSARG <- glmer(Look ~ Sex + Age + percent.rank + Trial*z.G.S + (1|ID), data = data, family = binomial)
summary(bmSARG)
bmSAP <- glmer(Look ~ Sex + Age + percent.rank +Trial*n.social.partners + (1|ID), data = data, family = binomial)
summary(bmSAP)
# Load all trials data:
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_SEA_noNAN.csv")
names(data)[1]<-"ID"
# load required libraries
library(lme4)
library(afex)
bmSAP <- glmer(Look ~ Sex + Age + percent.rank +Trial*n.social.partners + (1|ID), data = data, family = binomial)
summary(bmSAP)
bmSAW <- glmer(Look ~ Sex + Age + percent.rank + Trial*n.weak.connections + (1|ID), data = data, family = binomial)
summary(bmSAW)
bmSAC <- glmer(Look ~ Sex + Age + percent.rank + Trial*CompositeSocialityIndex + (1|ID), data = data, family = binomial)
summary(bmSAC)
bmSAT <- glmer(Look ~ Sex + Age + percent.rank + Trial*CSI.to.Top3 + (1|ID), data = data, family = binomial)
summary(bmSAT)
data = read.table('C:\Users\Camille Testard\Desktop\Behavioral_Ecology\Research_projects\Behavior_DataFiles2016\GroupHH2016_AgonisticActions.txt')
data = read.table('C:\Users\Camille Testard\Desktop\Behavioral_Ecology\Research_projects\Behavior_DataFiles2016\GroupHH2016_AgonisticActions.txt', header = TRUE, sep=",")
data = read.table(":\Users\Camille Testard\Desktop\Behavioral_Ecology\Research_projects\Behavior_DataFiles2016\GroupHH2016_AgonisticActions.txt", header = TRUE, sep=",")
data = read.table(":/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_AgonisticActions.txt", header = TRUE, sep=",")
data = read.table(":/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_AgonisticActions.txt")
data = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_AgonisticActions.txt")
data = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_AgonsiticActions.txt")
View(data)
View(data)
View(data)
View(data)
data = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_AgonsiticActions.txt", header=TRUE)
View(data)
data = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_AgonsiticActions.txt", header=TRUE, sep=",")
View(data)
data = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_FocalData.txt", header=TRUE, sep=",")
View(data)
View(data)
data = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_GroomingEvents.txt", header=TRUE, sep=",")
View(data)
rm(list = ls())# clear all variables
#Load data
data_grooming = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_GroomingEvents.txt", header=TRUE, sep=",")
data_proximity = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_ProximityGroups.txt", header=TRUE, sep=",")
View(data_proximity)
View(data_grooming)
data_group = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_GroupByYear.txt", header=TRUE, sep=",")
View(data_grooming)
View(data_grooming)
View(data_grooming)
View(data_group)
View(data_group)
install.packages("igraph", dependencies = TRUE)
install.packages("sna", dependencies = TRUE)
install.packages("tnet", dependencies = TRUE)
library(igraph)
library(sna)
library(tnet)
#Need to upload an adjacency matrix, rather than socprog style data...
#read adjacency matrix
data=read.csv("C:\Users\Camille Testard\Desktop\Behavioral_Ecology\Research_projects\Behavior_DataFiles2016\GroupHH2016_grooming_adjacency_matrix.csv",header=TRUE,row.names=1,check.names=FALSE) # choose an adjacency matrix from a .csv file
data=read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_grooming_adjacency_matrix.csv",header=TRUE,row.names=1,check.names=FALSE) # choose an adjacency matrix from a .csv file
rm(list = ls())# clear all variables
data=read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_grooming_adjacency_matrix.csv",header=TRUE,row.names=1,check.names=FALSE) # choose an adjacency matrix from a .csv file
View(data)
m=as.matrix(data)
View(m)
View(m)
demo(package="igraph")
help("igraph")
am.g=graph.adjacency(m,mode="directed",weighted=T)
View(am.g)
View(am.g)
am.g
A.Weightdeg<-degree(data)
ls()
A.Weightdeg
A.Weight.IN.deg <-degree(data, gmode="digraph", diag=FALSE, tmaxdev=FALSE, cmode="indegree", rescale=FALSE, ignore.eval=FALSE)
#weighted indegree
A.Weight.IN.deg <-degree(data, gmode="digraph", diag=FALSE, tmaxdev=FALSE, cmode="indegree", rescale=FALSE, ignore.eval=FALSE) #digraph = directed graph, cmode=type of degree centrality
#weighted outdegree
A.Weight.OUT.deg <-degree(data, gmode="digraph", diag=FALSE, tmaxdev=FALSE, cmode="outdegree", rescale=FALSE, ignore.eval=FALSE)
#Binary degree (inDegree)
A.Bindeg<-apply(data,2,function(a)sum(a>0))
A.Boutdeg<-apply(data,1,function(a)sum(a>0))
A.Bindeg
A.Boutdeg<-apply(data,1,function(a)sum(a>0))
rm(list = ls())# clear all variables
data <- read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Social_Cog_X_Social_Network/GazeData_Networks_noNAN_3trial.csv") # include only individuals who completed 3 trials
names(data)[1]<-"ID"
# two-way mixed ANOVA (both within and between subject)
aov2 <- aov(Look ~ Trial * ord.rank + Error(ID/Trial), data = data)
summary(aov2)
aov2 <- aov(Look ~ Trial * ord.rank, data = data)
summary(aov2)
install.packages("ggpubr", dependencies = TRUE)
xbar <- 159
n <- 1047
ns <- 100
M = matrix(rbinom(n*ns, size=1, prob=xbar/n), nrow=n)
#Load data
data_grooming = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_GroomingEvents.txt", header=TRUE, sep=",")
data_proximity = read.table("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_ProximityGroups.txt", header=TRUE, sep=",")
#C
View(data_proximity)
data_proximity.in.proximity(10)
data_proximity$in.proximity(10)
data_proximity$in.proximity
data_proximity$in.proximity[10]
View(data_proximity)
rm(list = ls())# clear all variables
library(igraph)
library(sna)
library(tnet)
#Need to upload an adjacency matrix, rather than socprog style data...
#read adjacency matrix
data=read.csv("C:/Users/Camille Testard/Desktop/Behavioral_Ecology/Research_projects/Behavior_DataFiles2016/GroupHH2016_CSI_adjacency_matrix.csv",header=TRUE,row.names=1,check.names=FALSE) # choose an adjacency matrix from a .csv file
m=as.matrix(data) # coerces the data set as a matrix
am.g=graph.adjacency(m,mode="directed",weighted=T) # this will create an directed 'igraph object'. Change qualifiers to make "undirected" or unweighted (null)
am.g
View(am.g)
#Get the network measures
#Weighted degree (Strength, undirected)
A.Weightdeg<-degree(data) #
A.Weightdeg
A.Weight.IN.deg <-degree(data, gmode="digraph", diag=FALSE, tmaxdev=FALSE, cmode="indegree", rescale=FALSE, ignore.eval=FALSE)
A.Weight.OUT.deg <-degree(data, gmode="digraph", diag=FALSE, tmaxdev=FALSE, cmode="outdegree", rescale=FALSE, ignore.eval=FALSE)
A.Weight.IN.deg
A.Weight.OUT.deg
A.Bindeg<-apply(data,2,function(a)sum(a>0))
A.Boutdeg<-apply(data,1,function(a)sum(a>0))
A.Clust<-transitivity(am.g,"local")
#clustering coeff (local). How close are the neighbors of a graph to be a clique (a complete graph). Are your friends also friends between each other?
A.Clust<-transitivity(am.g,"local") #from igraph package
#Weighted betweenness.The number of shortest paths that pass through the vertex.
A.Weight.between<-betweenness(data,gmode="graph",ignore.eval=F)
#Weighted eigenvector centrality
A.Weight.eig.cen<-evcent(data,gmode="graph",ignore.eval=F)
A.Weight.eig.cen<-evcent(data,gmode="graph",ignore.eval=F) #from 'sna' package
networkMeasures<-data.frame(cbind(A.Weightdeg,A.Weight.IN.deg,A.Weight.OUT.deg, A.Bindeg, A.Boutdeg, A.Clust,A.Weight.between,A.Weight.eig.cen))
write.table(networkMeasures, file = "A.2016HH_Centrality_Output.csv", sep = ",", col.names=T, row.names=T)
View(networkMeasures)
View(networkMeasures)
vcount(am.g)
vcount(am.g)^2.3
vcount(am.g)^2.8
V(am.g)
V(am.g)$label.cex <- 0.5
#increase space between nodes if overlapping
#fruchterman reingold layout
l <- layout.fruchterman.reingold(am.g,niter=500,area=vcount(am.g)^2.3,repulserad=vcount(am.g)^2.8)
#changes size of labels of vertices
V(am.g)$label.cex <- 0.5
View(l)
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name*2, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*2,edge.arrow.size = 0.5)
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*2,edge.arrow.size = 0.5)
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name*0.5, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*2,edge.arrow.size = 0.5)
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name*0.5, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*2,edge.arrow.size = 0.5)
V(am.g)$name
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*2,edge.arrow.size = 0.5)
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*0.5,edge.arrow.size = 0.2)
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*0.2,edge.arrow.size = 0.2)
#fruchterman reingold layout
l <- layout.fruchterman.reingold(am.g,niter=500,area=vcount(am.g)^3.3,repulserad=vcount(am.g)^3.8)
#changes size of labels of vertices
V(am.g)$label.cex <- 0.5
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*0.2,edge.arrow.size = 0.2)
vcount(am.g)
vcount(am.g)^3.3
l <- layout.fruchterman.reingold(am.g,niter=500,area=vcount(am.g)^2,repulserad=vcount(am.g)^2.3)
#changes size of labels of vertices
V(am.g)$label.cex <- 0.5
#plot graph
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*0.2,edge.arrow.size = 0.2)
plot.igraph(am.g,layout=l, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*2,edge.arrow.size = 0.5)
plot.igraph(am.g,layout=l, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*0.2,edge.arrow.size = 0.2)
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*0.2,edge.arrow.size = 0.2)
plot.igraph(am.g,layout=l, vertex.label=V(am.g)$name, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*0.2,edge.arrow.size = 0.2)
plot.igraph(am.g,layout=l, vertex.color="CYAN1", vertex.size=7,edge.color="grey20",
edge.width=E(am.g)$weight*0.2,edge.arrow.size = 0.2)
#spring embedded layout
s <- layout.spring(am.g, spring.length=1000,area=vcount(am.g)^2.3,repulserad=vcount(am.g)^2.8)
plot.igraph(am.g,layout=l, vertex.label=NA, vertex.color="orange", vertex.size=6,edge.color="grey20",edge.width=E(am.g)$weight*0.01)
plot.igraph(am.g,layout=l, vertex.label=NA, vertex.color="orange", vertex.size=6,edge.color="grey20",edge.width=E(am.g)$weight*0.01, edge.arrow.size = 0.2)
View(networkMeasures)
A.Weight.IN.deg
A.Weightdeg
A.Weight.OUT.deg
A.Weight.between
A.Weight.between
A.Weight.between<-betweenness(data,gmode="digraph",ignore.eval=F)
A.Weight.between
A.Weight.closenessn<-closeness(data,gmode="digraph",ignore.eval=F) #from 'sna' package
A.Weight.closeness<-closeness(data,gmode="digraph",ignore.eval=F) #from 'sna' package
A.Weight.closeness
A.Weight.closeness<-closeness(data,gmode="digraph",ignore.eval=F)
A.Weight.closeness
closeness(data,gmode="digraph",ignore.eval=F)
evcent(data,gmode="graph",ignore.eval=F)
closeness(data,gmode="graph",ignore.eval=F)
A.Weight.eig.cen<-evcent(data,gmode="digraph",ignore.eval=F)
A.Weight.eig.cen
A.Weight.eig.cen<-evcent(data,gmode="graph",ignore.eval=F)
A.Weight.eig.cen
install.packages("Perc", dependencies = TRUE)
install.packages("fitdistrplus", dependencies = TRUE)
library(ggplot2)
## Load Permutated Network Metrics
setwd("C:/Users/Camille Testard/Documents/GitHub/Cayo-Maria/Original_Sam_Rscripts")# set working directory
permutedNetsQ <- read.csv("permutedNetsQ.txt")
fudge <- .15 #adjust "jitter" when plotting box plots.
col1 <- "#356b86"; col2 <- "#f49634" #adjust color
########################################################
## For Global Network Metrics
########################################################
ggplot(permutedNetsQ, aes(x= as.factor(quarter), y=dens.w, color=as.factor(isPost), fill=as.factor(isPost) ))+
geom_boxplot()+
facet_grid(~group)+
theme_bw()
ggplot(permutedNetsQ, aes(x= as.factor(quarter), y=dens, color=as.factor(isPost), fill=as.factor(isPost) ))+
geom_boxplot()+
facet_grid(~group)+
theme_bw()
ggplot(permutedNetsQ, aes(x= as.factor(quarter), y=gini, color=as.factor(isPost), fill=as.factor(isPost) ))+
geom_boxplot()+
facet_grid(~group)+
theme_bw()
# open pdf file for later saving
pdf(file="GlobalNetworkMetrics.pdf", width=3.75, height=4.25, onefile = T) #width and height of the graphics region in inches. One file if true = multiple graphs in one file
# For Network Density
{ ggplot(permutedNetsQ, aes(x= as.factor(quarter), y=dens, color=as.factor(isPost), fill=as.factor(isPost) ))+
geom_boxplot()+
facet_grid(~group)+
theme_bw()
}
# For Network equity
{ ggplot(permutedNetsQ, aes(x= as.factor(quarter), y=gini, color=as.factor(isPost), fill=as.factor(isPost) ))+
geom_boxplot()+
facet_grid(~group)+
theme_bw()
}
